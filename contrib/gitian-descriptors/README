Notes on getting gitian builds up and running using Docker:

These instructions distilled from:
  https://docs.docker.com/install/linux/docker-ce/ubuntu/
  https://docs.docker.com/docker-for-mac/install/
  
... see there for complete details.

You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.

You probably need to enable hardware virtualization in your machine's BIOS.

Once you've got the right hardware and software:

    git clone git://github.com/primecoin/primecoin.git
    git clone git://github.com/devrandom/gitian-builder.git
    mkdir gitian-builder/inputs
    cd gitian-builder/inputs
    # Inputs for Linux and Win32:
    wget -O miniupnpc-1.6.tar.gz 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz'
    wget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'
    # Inputs for Win32: (Linux has packages for these)
    wget 'https://downloads.sourceforge.net/project/boost/boost/1.52.0/boost_1_52_0.tar.bz2'
    wget 'http://www.openssl.org/source/openssl-1.0.1g.tar.gz'
    wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'
    wget 'https://downloads.sourceforge.net/project/libpng/zlib/1.2.7/zlib-1.2.7.tar.gz'
    wget 'https://downloads.sourceforge.net/project/libpng/libpng15/older-releases/1.5.12/libpng-1.5.12.tar.gz'
    wget 'https://download.qt.io/archive/qt/4.8/4.8.7/qt-everywhere-opensource-src-4.8.7.tar.gz'
    cd ../..

Apply this patch to gitian repository (patch -p1 < 'patch_file'):

    diff --git a/bin/make-base-vm b/bin/make-base-vm
    index 18b2df8..49ed596 100755
    --- a/bin/make-base-vm
    +++ b/bin/make-base-vm
    @@ -181,7 +181,11 @@ if [ $DOCKER = "1" ]; then
         base_image="$DISTRO@sha256:$DOCKER_IMAGE_HASH"
         OUT=base-$DOCKER_IMAGE_HASH-$ARCH
       else
    -    base_image="$DISTRO:$SUITE"
    +    if [ $ARCH = "i386" ]; then
    +      base_image="i386/$DISTRO:$SUITE"
    +    else
    +      base_image="$DISTRO:$SUITE"
    +    fi
       fi
     
       # Generate the dockerfile
    
Continue:    
    
    cd gitian-builder
    bin/make-base-vm --docker --suite bionic --arch amd64
    bin/make-base-vm --docker --suite bionic --arch i386
    cd ..

    # Build Linux release:
    cd primecoin
    git pull
    cd ../gitian-builder
    git pull
    ./bin/gbuild --commit primecoin=HEAD ../primecoin/contrib/gitian-descriptors/gitian.yml

    # Build Win32 x86 dependencies: (only needs to be done once, or when dependency versions change)
    export USE_DOCKER=1
    
    ./bin/gbuild --commit primecoin=HEAD ../primecoin/contrib/gitian-descriptors/boost-win32.yml && mv build/out/boost-win32-1.52.0-gitian.zip inputs/
    ./bin/gbuild --commit primecoin=HEAD ../primecoin/contrib/gitian-descriptors/deps-win32.yml && mv build/out/primecoin-deps-0.0.2.zip inputs
    ./bin/gbuild --commit primecoin=HEAD ../primecoin/contrib/gitian-descriptors/qt-win32.yml && mv build/out/qt-win32-4.8.7-gitian-r1.zip inputs

    # Build Win32 x86 release:
    ./bin/gbuild --commit primecoin=HEAD ../primecoin/contrib/gitian-descriptors/gitian-win32.yml
    
    # Build Win32 x86_64 dependencies: (only needs to be done once, or when dependency versions change)
    ./bin/gbuild --commit primecoin=HEAD ../primecoin/contrib/gitian-descriptors/boost-win64.yml && mv build/out/boost-win64-1.52.0-gitian.zip inputs
    ./bin/gbuild --commit primecoin=HEAD ../primecoin/contrib/gitian-descriptors/deps-win64.yml && mv build/out/primecoin-deps-win64-0.0.2.zip inputs
    ./bin/gbuild --commit primecoin=HEAD ../primecoin/contrib/gitian-descriptors/qt-win64.yml && mv build/out/qt-win64-4.8.7-gitian-r1.zip inputs

    # Build Win32 x86_64 release:
    ./bin/gbuild --commit primecoin=HEAD ../primecoin/contrib/gitian-descriptors/gitian-win64.yml    

---------------------

gitian-builder now also supports building using LXC. See
  https://help.ubuntu.com/12.04/serverguide/lxc.html
... for how to get LXC up and running under Ubuntu.

If your main machine is a 64-bit Mac or PC with a few gigabytes of memory
and at least 10 gigabytes of free disk space, you can gitian-build using
LXC running inside a virtual machine.

Here's a description of Gavin's setup on OSX 10.6:

1. Download and install VirtualBox from https://www.virtualbox.org/

2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from
  http://www.ubuntu.com/

3. Run VirtualBox and create a new virtual machine, using the
  Ubuntu .iso (see the VirtualBox documentation for details).
  Create it with at least 2 gigabytes of memory and a disk
  that is at least 20 gigabytes big.

4. Inside the running Ubuntu desktop, install:
  sudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder

5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the "Once you've got the right
  hardware and software" instructions above:
  export USE_LXC=1
  git clone git://github.com/bitcoin/bitcoin.git
  ... etc

If your machine is 64-bit ubuntu 18.04, you can also build through gitian-build.sh
1, git clone git://github.com/primecoin/primecoin.git
2, git clone git://github.com/devrandom/gitian-builder.git

To build tags before v0.1.5xpm, apply this patch to gitian repository (patch -p1 < 'patch_file'):

    diff --git a/bin/make-base-vm b/bin/make-base-vm
    index 18b2df8..49ed596 100755
    --- a/bin/make-base-vm
    +++ b/bin/make-base-vm
    @@ -181,7 +181,11 @@ if [ $DOCKER = "1" ]; then
         base_image="$DISTRO@sha256:$DOCKER_IMAGE_HASH"
         OUT=base-$DOCKER_IMAGE_HASH-$ARCH
       else
    -    base_image="$DISTRO:$SUITE"
    +    if [ $ARCH = "i386" ]; then
    +      base_image="i386/$DISTRO:$SUITE"
    +    else
    +      base_image="$DISTRO:$SUITE"
    +    fi
       fi

       # Generate the dockerfile
3, cd gitian-builder
    bin/make-base-vm --docker --suite bionic --arch amd64
    To build tags before v0.1.5xpm, create a 32 bit VM
    bin/make-base-vm --docker --suite bionic --arch i386
    cd ..
4, Build primecoin (run from root build directory): primecoin/contrib/gitian-build.sh --build -c -j 8 -m 11000 primecoin master
  Where is:
    -j N: Parallel build using N threads
    -m M: Memory limit in megabytes
    primecoin directory will be changed after this process